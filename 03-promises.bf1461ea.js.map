{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEnCC,QAAQC,MAETC,OAAOD,K,CA9BEE,SAASC,cAAc,QAC/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,cAAcC,SAEzC,IAAIC,EAAQC,SAASJ,EAAaX,MAAMgB,OACxC,MAAMC,EAAOF,SAASJ,EAAaM,KAAKD,OAClCE,EAASH,SAASJ,EAAaO,OAAOF,OAE5C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUL,GACrBM,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEzEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGzEc,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\nconst form = document.querySelector('form')\nform.addEventListener('submit', onSubmitBtnClick)\n\nfunction onSubmitBtnClick(event) {\n  event.preventDefault()\n\n  const formElements = event.currentTarget.elements\n\n  let delay = parseInt(formElements.delay.value)\n  const step = parseInt(formElements.step.value)\n  const amount = parseInt(formElements.amount.value)\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      })\n\n    delay += step\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n     resolve(data)\n  } else {\n    reject(data)\n  }\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","resolve","data","reject","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","delay1","parseInt","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bf1461ea.js.map"}